import Injest from 'injestdb'
import assert from 'assert'
import isString from 'is-string'
import DatArchive from 'node-dat-archive'

var db = new Injest('share-ratings')

db.schema({
    version: 1,
    broadcasts: {
        primaryKey: 'createdAt',
        index: [
            'createdAt',
            '_origin', // compound index. '_origin' is an autogenerated attribute which represents the URL of the authoring archive
        ],
        validator: record => {
            assert(typeof record.text === 'string')
            assert(typeof record.createdAt === 'number')
            return record
        },
    },
    profile: {
        singular: true,
        index: 'name',
        validator: record => {
            assert(typeof record.name === 'string')
            return {
                name: record.name,
                description: isString(record.description) ? record.description : '',
                photoUri: isString(record.photoUri) ? record.photoUri : '',
            }
        },
    },
    likes: {
        primaryKey: 'createdAt',
        index: 'targetUrl',
        validator: record => {
            assert(typeof record.targetUrl === 'string')
            return record
        },
    },
})

export async function newArchive() {
    var archive = await DatArchive.create({
        localPath: './dat-archive',
        title: 'Archive',
        description: 'Test Archive',
    })
    var key = await DatArchive.resolveName(archive.url)
    return key
}

export async function createDat() {
    var archive = newArchive()
    await db.open()

    await db.addArchives(archive)

    await db.profile.add((archive), {name: 'userName'})

    return (
        console.log(await db.broadcasts)
    )
};
